/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */

class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
       if(root==NULL){
        return NULL;
       } 
       //both resides in left part
       if(p->val < root->val && q->val < root->val){
        TreeNode * leftans = lowestCommonAncestor(root->left,p,q);
        return leftans;
       }
       //both resides in right part
       if(p->val > root->val && q->val > root->val){
        TreeNode * rightans = lowestCommonAncestor(root->right,p,q);
        return rightans;
       }
       // p in left and q in right
       if(p->val < root-> val && q-> val > root->val){
        return root;
       }
       //q in left p in right
       if(p->val > root->val && q->val < root->val){
        return root;
       }
       return root;
    }
};
