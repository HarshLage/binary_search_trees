/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isValid(TreeNode * root , long long int lowerbound , long long int upperbound){
        if(root==NULL){
            return true;
        }

        bool rule1 = (root->val > lowerbound);
        bool rule2 = (root->val <upperbound);
        bool leftans = isValid(root->left,lowerbound,root->val);
        bool rightans = isValid(root->right,root->val,upperbound);

        if(rule1 && rule2 && leftans && rightans ){
            return true;
        }
        else{
            return false;
        }
    }
    bool isValidBST(TreeNode* root) {
        long long int lowerbound = -2147483657;
        long long int upperbound = 2147483657 ;
        bool ans = isValid(root,lowerbound,upperbound);
        return ans; 
    }
};
